services:
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./apps/api/.env
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/saas
    volumes:
      - ./apps/api:/app
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy

  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages/shared:/app/packages/shared
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      - api

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=saas
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d saas"]
      interval: 2s
      timeout: 3s
      retries: 30

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
